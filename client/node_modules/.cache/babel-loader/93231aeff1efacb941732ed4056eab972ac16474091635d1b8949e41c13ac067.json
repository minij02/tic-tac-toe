{"ast":null,"code":"var _jsxFileName = \"C:\\\\tic-tac-toe\\\\client\\\\src\\\\components\\\\Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport Timer from './Timer';\nimport useTimer from '../hooks/useTimer';\nimport calculateWinner from '../utils/calculateWinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  // 게임 상태 관리: 이력, 현재 차례, 정렬 상태\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [previewSquares, setPreviewSquares] = useState([Array(9).fill(null)]); // 미리보기 상태 추가\n  const [previewIndex, setPreviewIndex] = useState(null); // 미리보기가 적용된 칸의 인덱스\n  const [ascending, setAscending] = useState(true);\n  const currentSquares = history[stepNumber]; // 현재 보드 상태\n  const winner = calculateWinner(currentSquares); // 승자 계산\n\n  /**\r\n   * handleTimeUp - 시간이 다 되었을 때 자동으로 빈 칸 중 하나에 수를 둠.\r\n   */\n  const handleTimeUp = () => {\n    // 빈 칸을 찾아서 자동으로 수를 둠\n    const emptyIndex = currentSquares.findIndex(square => square === null);\n    if (emptyIndex !== -1 && !winner) {\n      handleClick(emptyIndex); // 빈 칸에 수를 둠\n      resetTimer(); // 시간이 다 되어 수를 둔 경우에도 타이머를 리셋\n    }\n  };\n\n  // 타이머 설정: 각 플레이어에게 10초 제한 부여\n  const {\n    timeLeft,\n    resetTimer\n  } = useTimer(10, handleTimeUp);\n\n  /**\r\n   * handleClick - 지정된 인덱스(i)에 첫 번째 클릭 시 미리보기로 표시, 두 번째 클릭 시 실제로 수를 둠.\r\n   * @param {number} i - 클릭된 칸의 인덱스\r\n   * @returns \r\n   */\n  const handleClick = i => {\n    const squaresCopy = [...currentSquares];\n\n    // 이미 승자가 있거나 해당 칸이 차있으면 무시\n    if (winner || currentSquares[i] || previewSquares[i]) {\n      return;\n    }\n    if (previewIndex === i) {\n      // 미리보기를 두 번째로 클릭하면 실제로 수를 둠\n      squaresCopy[i] = xIsNext ? 'X' : 'O';\n      setHistory([...history.slice(0, stepNumber + 1), squaresCopy]);\n      setStepNumber(stepNumber + 1);\n      setXIsNext(!xIsNext);\n      setPreviewIndex(null);\n      setPreviewSquares(Array(9).fill(null)); // 미리보기 초기화\n      resetTimer(); // 턴을 넘기면서 타이머 리셋\n    } else {\n      // 첫 번째 클릭 시 미리보기로 수를 표시\n      const previewCopy = [...Array(9).fill(null)];\n      previewCopy[i] = xIsNext ? 'X' : 'O';\n      setPreviewIndex(i);\n      setPreviewSquares(previewCopy);\n    }\n  };\n\n  /**\r\n   * jumpTo - 특정 이동 단계로 되돌아감.\r\n   * @param {number} step - 되돌아갈 단계\r\n   */\n  const jumpTo = step => {\n    setStepNumber(step);\n    setXIsNext(step % 2 === 0);\n    resetTimer(); // 이동 시 타이머도 리셋\n  };\n\n  /**\r\n   * renderMoves - 게임의 이동 기록을 렌더링함.\r\n   * 이동 기록은 오름차순 또는 내림차순으로 정렬됨.\r\n   */\n  const renderMoves = () => {\n    const moves = history.map((_, move) => {\n      const desc = move ? `Go to move #${move} (${Math.floor((move - 1) / 3)}, ${(move - 1) % 3})` : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this);\n    });\n    return ascending ? moves : moves.reverse(); // 정렬된 이동 기록 반환\n  };\n\n  /**\r\n   * 무승부 상태 계산 - 모든 칸이 채워졌는지 확인하여 무승부 처리\r\n   */\n  const isDraw = () => {\n    return currentSquares.every(square => square !== null) && !winner;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: currentSquares,\n        onSquareClick: handleClick,\n        previewSquares: previewSquares,\n        winningSquares: winner ? winner.winningSquares : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: winner ? `Winner: ${winner.winner}` : isDraw() ? 'Draw!' : `Next player: ${xIsNext ? 'X' : 'O'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), !winner && !isDraw() && /*#__PURE__*/_jsxDEV(Timer, {\n        timeLeft: timeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAscending(!ascending),\n        children: [\"Sort by: \", ascending ? 'Ascending' : 'Descending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: renderMoves()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 7\n  }, this);\n}\n_s(Game, \"CPc5mtJDEi7o1WW7DfG13uR6yyo=\", false, function () {\n  return [useTimer];\n});\n_c = Game;\n;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","Timer","useTimer","calculateWinner","jsxDEV","_jsxDEV","Game","_s","history","setHistory","Array","fill","stepNumber","setStepNumber","xIsNext","setXIsNext","previewSquares","setPreviewSquares","previewIndex","setPreviewIndex","ascending","setAscending","currentSquares","winner","handleTimeUp","emptyIndex","findIndex","square","handleClick","resetTimer","timeLeft","i","squaresCopy","slice","previewCopy","jumpTo","step","renderMoves","moves","map","_","move","desc","Math","floor","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","reverse","isDraw","every","className","squares","onSquareClick","winningSquares","_c","$RefreshReg$"],"sources":["C:/tic-tac-toe/client/src/components/Game.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Board from './Board';\r\nimport Timer from './Timer';\r\nimport useTimer from '../hooks/useTimer';\r\nimport calculateWinner from '../utils/calculateWinner';\r\n\r\nfunction Game() {\r\n    // 게임 상태 관리: 이력, 현재 차례, 정렬 상태\r\n    const [history, setHistory] = useState([Array(9).fill(null)]);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [previewSquares, setPreviewSquares] = useState([Array(9).fill(null)]); // 미리보기 상태 추가\r\n    const [previewIndex, setPreviewIndex] = useState<number | null>(null); // 미리보기가 적용된 칸의 인덱스\r\n    const [ascending, setAscending] = useState(true);\r\n  \r\n    const currentSquares = history[stepNumber]; // 현재 보드 상태\r\n    const winner = calculateWinner(currentSquares); // 승자 계산\r\n\r\n    /**\r\n     * handleTimeUp - 시간이 다 되었을 때 자동으로 빈 칸 중 하나에 수를 둠.\r\n     */\r\n    const handleTimeUp = () => {\r\n        // 빈 칸을 찾아서 자동으로 수를 둠\r\n        const emptyIndex = currentSquares.findIndex((square) => square === null);\r\n        if (emptyIndex !== -1 && !winner) {\r\n            handleClick(emptyIndex); // 빈 칸에 수를 둠\r\n            resetTimer(); // 시간이 다 되어 수를 둔 경우에도 타이머를 리셋\r\n        }\r\n    }\r\n  \r\n    // 타이머 설정: 각 플레이어에게 10초 제한 부여\r\n    const { timeLeft, resetTimer } = useTimer(10, handleTimeUp);\r\n\r\n    /**\r\n     * handleClick - 지정된 인덱스(i)에 첫 번째 클릭 시 미리보기로 표시, 두 번째 클릭 시 실제로 수를 둠.\r\n     * @param {number} i - 클릭된 칸의 인덱스\r\n     * @returns \r\n     */\r\n    const handleClick = (i: number) => {\r\n        const squaresCopy = [...currentSquares];\r\n\r\n        // 이미 승자가 있거나 해당 칸이 차있으면 무시\r\n        if (winner || currentSquares[i] || previewSquares[i]) {\r\n            return;\r\n        }\r\n\r\n        if (previewIndex === i) {\r\n            // 미리보기를 두 번째로 클릭하면 실제로 수를 둠\r\n            squaresCopy[i] = xIsNext ? 'X' : 'O';\r\n            setHistory([...history.slice(0, stepNumber + 1), squaresCopy]);\r\n            setStepNumber(stepNumber + 1);\r\n            setXIsNext(!xIsNext);\r\n            setPreviewIndex(null);\r\n            setPreviewSquares(Array(9).fill(null)); // 미리보기 초기화\r\n            resetTimer(); // 턴을 넘기면서 타이머 리셋\r\n        } else {\r\n            // 첫 번째 클릭 시 미리보기로 수를 표시\r\n            const previewCopy = [...Array(9).fill(null)];\r\n            previewCopy[i] = xIsNext ? 'X' : 'O';\r\n            setPreviewIndex(i);\r\n            setPreviewSquares(previewCopy);\r\n        }\r\n    };\r\n  \r\n    /**\r\n     * jumpTo - 특정 이동 단계로 되돌아감.\r\n     * @param {number} step - 되돌아갈 단계\r\n     */\r\n    const jumpTo = (step: number) => {\r\n      setStepNumber(step);\r\n      setXIsNext(step % 2 === 0);\r\n      resetTimer(); // 이동 시 타이머도 리셋\r\n    };\r\n  \r\n    /**\r\n     * renderMoves - 게임의 이동 기록을 렌더링함.\r\n     * 이동 기록은 오름차순 또는 내림차순으로 정렬됨.\r\n     */\r\n    const renderMoves = () => {\r\n      const moves = history.map((_, move) => {\r\n        const desc = move\r\n          ? `Go to move #${move} (${Math.floor((move - 1) / 3)}, ${(move - 1) % 3})`\r\n          : 'Go to game start';\r\n  \r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      });\r\n  \r\n      return ascending ? moves : moves.reverse();  // 정렬된 이동 기록 반환\r\n    };\r\n  \r\n    /**\r\n     * 무승부 상태 계산 - 모든 칸이 채워졌는지 확인하여 무승부 처리\r\n     */\r\n    const isDraw = () => {\r\n        return currentSquares.every(square => square !== null) && !winner;\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board squares={currentSquares} \r\n                 onSquareClick={handleClick} \r\n                 previewSquares={previewSquares} \r\n                 winningSquares={winner ? winner.winningSquares : []}\r\n                 /> \r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{winner ? `Winner: ${winner.winner}` : isDraw() ? 'Draw!' : `Next player: ${xIsNext ? 'X' : 'O'}`}</div>\r\n         \r\n          {!winner && !isDraw() && <Timer timeLeft={timeLeft} />}\r\n          \r\n          <button onClick={() => setAscending(!ascending)}>\r\n            Sort by: {ascending ? 'Ascending' : 'Descending'}\r\n          </button>\r\n          <ol>{renderMoves()}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  };  \r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}