{"ast":null,"code":"var _jsxFileName = \"C:\\\\tic-tac-toe\\\\client\\\\src\\\\components\\\\Options.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Options({\n  onConfirm\n}) {\n  _s();\n  const [playerType, setPlayerType] = useState(null);\n  const [gameTime, setGameTime] = useState(null);\n  const isSelectionComplete = playerType !== null && gameTime !== null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose opponent:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPlayerType('person'),\n        className: playerType === 'person' ? 'selected' : '',\n        children: \"vs. Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPlayerType('computer'),\n        className: playerType === 'computer' ? 'selected' : '',\n        children: \"vs. Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGameTime(10),\n        className: gameTime === 10 ? 'selected' : '',\n        children: \"10s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGameTime(30),\n        className: gameTime === 30 ? 'selected' : '',\n        children: \"30s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGameTime(60),\n        className: gameTime === 60 ? 'selected' : '',\n        children: \"60s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => isSelectionComplete && onConfirm(playerType, gameTime),\n      disabled: !isSelectionComplete,\n      className: \"start-game-btn\",\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Options, \"PmCqnWVqqCv0F43pnKObCCcAPQ4=\");\n_c = Options;\nexport default Options;\nvar _c;\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Options","onConfirm","_s","playerType","setPlayerType","gameTime","setGameTime","isSelectionComplete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/tic-tac-toe/client/src/components/Options.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface OptionsProps {\r\n  onConfirm: (playerType: string, gameTime: number) => void;\r\n}\r\n\r\nfunction Options({ onConfirm }: OptionsProps) {\r\n  const [playerType, setPlayerType] = useState<string | null>(null);\r\n  const [gameTime, setGameTime] = useState<number | null>(null);\r\n\r\n  const isSelectionComplete = playerType !== null && gameTime !== null;\r\n\r\n  return (\r\n    <div className=\"options\">\r\n      <h1>Options</h1>\r\n      \r\n      {/* Player Type 선택 */}\r\n      <div className=\"option-group\">\r\n        <h2>Choose opponent:</h2>\r\n        <button onClick={() => setPlayerType('person')} className={playerType === 'person' ? 'selected' : ''}>\r\n          vs. Person\r\n        </button>\r\n        <button onClick={() => setPlayerType('computer')} className={playerType === 'computer' ? 'selected' : ''}>\r\n          vs. Computer\r\n        </button>\r\n      </div>\r\n\r\n      {/* Game Time 선택 */}\r\n      <div className=\"option-group\">\r\n        <h2>Set Time:</h2>\r\n        <button onClick={() => setGameTime(10)} className={gameTime === 10 ? 'selected' : ''}>\r\n          10s\r\n        </button>\r\n        <button onClick={() => setGameTime(30)} className={gameTime === 30 ? 'selected' : ''}>\r\n          30s\r\n        </button>\r\n        <button onClick={() => setGameTime(60)} className={gameTime === 60 ? 'selected' : ''}>\r\n          60s\r\n        </button>\r\n      </div>\r\n\r\n      {/* 둘 다 선택해야만 Start 버튼이 활성화됨 */}\r\n      <button\r\n        onClick={() => isSelectionComplete && onConfirm(playerType!, gameTime!)}\r\n        disabled={!isSelectionComplete}\r\n        className=\"start-game-btn\"\r\n      >\r\n        Start Game\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Options;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}