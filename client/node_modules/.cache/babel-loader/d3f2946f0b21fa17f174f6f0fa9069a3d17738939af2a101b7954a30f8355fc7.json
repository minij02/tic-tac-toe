{"ast":null,"code":"var _jsxFileName = \"C:\\\\tic-tac-toe\\\\client\\\\src\\\\components\\\\Board.tsx\";\nimport React from 'react';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = ({\n  squares,\n  onSquareClick,\n  winningSquares\n}) => {\n  const renderSquare = i => /*#__PURE__*/_jsxDEV(Square, {\n    value: squares[i],\n    onClick: () => onSquareClick(i),\n    highlight: isWinningSquare\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = Board;\nconst renderBoard = () => {\n  let board = [];\n  for (let row = 0; row < 3; row++) {\n    let boardRow = [];\n    for (let col = 0; col < 3; col++) {\n      boardRow.push(renderSquare(row * 3 + col));\n    }\n    board.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: boardRow\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this));\n  }\n  return board;\n};\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Square","jsxDEV","_jsxDEV","Board","squares","onSquareClick","winningSquares","renderSquare","i","value","onClick","highlight","isWinningSquare","fileName","_jsxFileName","lineNumber","columnNumber","_c","renderBoard","board","row","boardRow","col","push","className","children","$RefreshReg$"],"sources":["C:/tic-tac-toe/client/src/components/Board.tsx"],"sourcesContent":["import React from 'react';\r\nimport Square from './Square';\r\n\r\ninterface BoardProps {\r\n    squares: ('X' | 'O' | null)[];\r\n    onSquareClick: (i: number) => void;\r\n}\r\n\r\nconst Board: React.FC<BoardProps> = ({ squares, onSquareClick, winningSquares }) => {\r\n    const renderSquare = (i: number) => (\r\n        <Square value={squares[i]} onClick={() => onSquareClick(i)} \r\n        highlight={isWinningSquare} />\r\n    );\r\n};\r\n\r\nconst renderBoard = () => {\r\n    let board =[];\r\n    for (let row = 0; row < 3; row++) {\r\n        let boardRow = [];\r\n        for (let col = 0;  col < 3; col++) {\r\n            boardRow.push(renderSquare(row * 3 + col));\r\n        }\r\n        board.push(<div key={row} className=\"board-row\">{boardRow}</div>)\r\n    }\r\n    return board;\r\n}\r\n\r\nexport default Board;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9B,MAAMC,KAA2B,GAAGA,CAAC;EAAEC,OAAO;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EAChF,MAAMC,YAAY,GAAIC,CAAS,iBAC3BN,OAAA,CAACF,MAAM;IAACS,KAAK,EAAEL,OAAO,CAACI,CAAC,CAAE;IAACE,OAAO,EAAEA,CAAA,KAAML,aAAa,CAACG,CAAC,CAAE;IAC3DG,SAAS,EAAEC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAChC;AACL,CAAC;AAACC,EAAA,GALId,KAA2B;AAOjC,MAAMe,WAAW,GAAGA,CAAA,KAAM;EACtB,IAAIC,KAAK,GAAE,EAAE;EACb,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAC,EAAEA,GAAG,EAAE,EAAE;IAC9B,IAAIC,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAGA,GAAG,GAAG,CAAC,EAAEA,GAAG,EAAE,EAAE;MAC/BD,QAAQ,CAACE,IAAI,CAAChB,YAAY,CAACa,GAAG,GAAG,CAAC,GAAGE,GAAG,CAAC,CAAC;IAC9C;IACAH,KAAK,CAACI,IAAI,cAACrB,OAAA;MAAesB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEJ;IAAQ,GAApCD,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuC,CAAC,CAAC;EACrE;EACA,OAAOG,KAAK;AAChB,CAAC;AAED,eAAehB,KAAK;AAAC,IAAAc,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}